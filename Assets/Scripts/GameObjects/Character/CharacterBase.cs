//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Xml.Linq;
using System.Collections.Generic;
using System.Linq;

namespace GameObjects
{
	public abstract class CharacterBase : ICharacter
	{
		#region Properties

		public string Name { get; private set; }
		public CharacterStatus Status { get; private set; }
		public List<IBaseItem> Inventory { get; private set; }
		public Armor Armor { get; private set; }
		public Weapon Weapon { get; private set; }
		public Coordinates GridLoc { get; set; }

		#endregion


		#region Constructor

		public CharacterBase (XElement characterXML)
		{
			Name = characterXML.Element (Constants.XMLName).Value;
			Status = new CharacterStatus (characterXML.Element (Constants.XMLCharacterStatus));
			Armor = new Armor (characterXML.Element (Constants.XMLArmor));
			Weapon = new Weapon (characterXML.Element (Constants.XMLWeapon));

			Inventory = new List<IBaseItem> ();
			XElement inventoryXML = characterXML.Element (Constants.XMLInventory);
			LoadInventory (inventoryXML);
		}

		#endregion


		#region Methods

		private void LoadInventory(XElement inventoryXML)
		{
			foreach(XElement itemXML in inventoryXML.Elements())
			{
				switch(itemXML.Name.ToString())
				{
					case "Weapon":
						Inventory.Add(new Weapon(itemXML));
						break;
					case "Armor":
						Inventory.Add(new Armor(itemXML));
						break;
					case "Consumable":
						Inventory.Add(new Consumable(itemXML));
						break;
				}
			}
		}

		#endregion
	}
}

