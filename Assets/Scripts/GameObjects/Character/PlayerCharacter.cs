//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Xml.Linq;

namespace GameObjects
{
	public class PlayerCharacter : CharacterBase, ISavable
	{
		#region Private Properties
		
		private float _inventoryWeight { get {
				float weight = 0.0f;
				foreach(IBaseItem item in Inventory) {
					weight += item.Weight;
				}
				return weight;
			}}
		
		#endregion


		#region Properties

		public float CurrentEncumberance { get {
				return _inventoryWeight + Armor.Weight + Weapon.Weight;
			}}

		#endregion


		#region Constructor

		public PlayerCharacter (XElement characterXML) : base(characterXML)
		{

		}

		#endregion


		#region Methods

		public AddToInventoryResults AddItemToInventory(IBaseItem item)
		{
			if(Inventory.Count == Armor.Pockets)
				return AddToInventoryResults.NotEnoughPockets;
			else if(CurrentEncumberance + item.Weight > Status.MaxEncumberance)
				return AddToInventoryResults.TooHeavy;
			else {
				Inventory.Add(item);
			}
			
			return AddToInventoryResults.Success;
		}	

		private XElement SaveInventory()
		{
			XElement inventoryData = new XElement (Constants.XMLInventory);
			
			foreach(IBaseItem item in Inventory)
			{
				inventoryData.Add(item.Save());
			}
			
			return inventoryData;
		}

		public XElement Save()
		{
			XElement characterData = new XElement (Constants.XMLCharacter, 
			                                       new XAttribute (Constants.XMLName, Name),
			                                       new XAttribute (Constants.XMLCharacterStatus, Status.Save()),
			                                       new XAttribute (Constants.XMLArmor, Armor.Save()),
			                                       new XAttribute (Constants.XMLWeapon, Weapon.Save()),
			                                       new XAttribute (Constants.XMLInventory, SaveInventory()));		
			
			return characterData;
		}

		#endregion
	}
}

